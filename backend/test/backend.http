@base_url = http://localhost:3000
# @base_url = https://photosphere-api.codecapers.com.au
@token = not needed
@setId = test-collection
#@collection = d5a75330-61ca-487d-b81b-0d2aeaa74c76
@asset = 1234
@hash_id = 4567
@hash = ABCD

###

GET {{base_url}}/alive

###
# @name user_metadata
#
# Gets metadata for a user.
#
GET {{base_url}}/user
Authorization: Bearer {{token}}

###
# @name upload_asset
#
# Uploads the metadata for the asset.
#

POST {{base_url}}/operations
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "clientId": "a-client-id",
    "ops": [
        {
            "collectionName": "metadata",
            "recordId": "{{asset}}",
            "op": {
                "type": "set",
                "fields": {
                    "setId": "{{setId}}",
                    "contentType": "image/jpeg", 
                    "fileName": "./test-assets/1.jpeg", 
                    "width": 4160, 
                    "height": 6240, 
                    "hash": "{{hash}}", 
                    "fileDate": "2023-02-08T01:27:01.419Z", 
                    "photoDate": "2023-02-08T01:27:01.419Z", 
                    "location": "Somewhere1", 
                    "properties": { 
                        "a": "property" 
                    }, 
                    "labels": [ 
                        "Cool photo" 
                    ] 
                }
            }
        }
    ]
}

###
# Gets metadata for an asset.
#

GET {{base_url}}/get-one?id={{asset}}&col=metadata
Authorization: Bearer {{token}}

###
# Check the asset's hash.

GET {{base_url}}/check-hash?set={{setId}}&hash={{hash}}
Authorization: Bearer {{token}}

###
# 
# Uploads the full content for the asset.
#

POST {{base_url}}/asset
Content-Type: image/jpeg
id: {{asset}}
set: {{setId}}
asset-type: original
Authorization: Bearer {{token}}

< ./test-assets/1.jpeg


###
# Retrieve an asset.
#

GET {{base_url}}/asset?id={{asset}}&set={{setId}}&type=original
Authorization: Bearer {{token}}

###
#
# Uploads a thumbnail for the asset.
#

POST {{base_url}}/asset
Content-Type: image/jpeg
id: {{asset}}
set: {{setId}}
asset-type: thumb
Authorization: Bearer {{token}}

< ./test-assets/2.jpeg

###
# Retrieve an thumbnail.
#

GET {{base_url}}/asset?id={{asset}}&set={{setId}}&type=thumb
Authorization: Bearer {{token}}

###
#
# Uploads the display version of an asset.
#

POST {{base_url}}/asset
Content-Type: image/jpeg
id: {{asset}}
set: {{setId}}
asset-type: display
Authorization: Bearer {{token}}

< ./test-assets/3.jpeg

###
# Retrieve the display asset.
#

GET {{base_url}}/asset?id={{asset}}&set={{setId}}&tok={{token}}&type=display

###
# Gets metadata for an asset.
#

GET {{base_url}}/get-one?id={{asset}}&col=metadata
Authorization: Bearer {{token}}

### 
# Sets fields for an asset.
#

POST {{base_url}}/operations
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "clientId": "a-client-id",
    "ops": [{
        "collectionName": "metadata",
        "recordId": "{{asset}}",
        "op": {
            "type": "set",
            "fields": {
                "aField": "aValue"
            }
        }
    }]
}

###
# Gets metadata for an asset.
#

GET {{base_url}}/get-one?id={{asset}}&col=metadata
Authorization: Bearer {{token}}

### 
# Pushes a value on an array.
#

POST {{base_url}}/operations
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "clientId": "a-client-id",
    "ops": [{
        "collectionName": "metadata",
        "recordId": "{{asset}}",
        "op": {
            "type": "push",
            "field": "anArray",
            "value": "anElementValue"
       }
    }]
}

###
# Gets metadata for an asset.
#

GET {{base_url}}/get-one?id={{asset}}&col=metadata
Authorization: Bearer {{token}}

### 
# Pops a value on an array.
#

POST {{base_url}}/operations
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "clientId": "a-client-id",
    "ops": [{
        "collectionName": "metadata",
        "recordId": "{{asset}}",
        "op": {
            "type": "pull",
            "field": "anArray",
            "value": "anElementValue"
       }
    }]
}

###
# Gets metadata for an asset.
#

GET {{base_url}}/get-one?id={{asset}}&col=metadata
Authorization: Bearer {{token}}

###
# @name get_journal
# Gets journal operations for a collection.
#

POST {{base_url}}/journal
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "collectionId": "{{setId}}",
    "clientId": "a-different-client-id"
}

###
# Gets journal operations after a certain update.
#

@last_update_time = {get_journal.repsonse.body.latestTime}

POST {{base_url}}/journal
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "collectionId": "{{setId}}",
    "clientId": "a-client-id",
    "lastUpdateTime": "{{last_update_time}}"
}

###
# Gets the latest server time.
#

GET {{base_url}}/latest-time
Authorization: Bearer {{token}}

###
# Gets a page of assets.
#

GET {{base_url}}/get-all?set={{setId}}&col=metadata&skip=0&limit=5
Authorization: Bearer {{token}}