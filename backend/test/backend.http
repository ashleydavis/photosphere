@base_url = http://localhost:3000
# @base_url = https://photosphere-api.codecapers.com.au
@token = not needed
@collection = test-collection

###

GET {{base_url}}/alive

###
# @name user_metadata
#
# Gets metadata for a user.
#
GET {{base_url}}/user
Authorization: Bearer {{token}}


###
# @name upload_asset
#
# Uploads the metadata for the asset.
#

POST {{base_url}}/metadata
Content-Type: application/json
Authorization: Bearer {{token}}

{ 
    "col": "{{collection}}",
    "contentType": "image/jpeg", 
    "fileName": "./test-assets/1.jpeg", 
    "width": 4160, 
    "height": 6240, 
    "hash": "1234", 
    "fileDate": "2023-02-08T01:27:01.419Z", 
    "photoDate": "2023-02-08T01:27:01.419Z", 
    "location": "Somewhere1", 
    "properties": { 
        "a": "property" 
    }, 
    "labels": [ 
        "Cool photo" 
    ] 
}

###
# 
# Uploads the full content for the asset.
#

@upload_asset_id = {{upload_asset.response.body.assetId}}

POST {{base_url}}/asset
Content-Type: image/jpeg
id: {{upload_asset_id}}
col: {{collection}}
Authorization: Bearer {{token}}

< ./test-assets/1.jpeg


###
# Retrieve an asset.
#

GET {{base_url}}/asset?id={{upload_asset_id}}&col={{collection}}&tok={{token}}

###
#
# Uploads a thumbnail for the asset.
#

POST {{base_url}}/thumb
Content-Type: image/jpeg
id: {{upload_asset_id}}
col: {{collection}}
Authorization: Bearer {{token}}

< ./test-assets/2.jpeg

###
# Retrieve an thumbnail.
#

GET {{base_url}}/thumb?id={{upload_asset_id}}&col={{collection}}&tok={{token}}

###
#
# Uploads the display version of an asset.
#

POST {{base_url}}/display
Content-Type: image/jpeg
id: {{upload_asset_id}}
col: {{collection}}
Authorization: Bearer {{token}}

< ./test-assets/3.jpeg

###
# Retrieve the display asset.
#

GET {{base_url}}/display?id={{upload_asset_id}}&col={{collection}}&tok={{token}}

###
# Gets metadata for an asset.
#

GET {{base_url}}/metadata?id={{upload_asset_id}}&col={{collection}}
Content-Type: application/json
Authorization: Bearer {{token}}

### 
# Sets labels for an asset.
#

PATCH {{base_url}}/metadata
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "id": "{{upload_asset_id}}",
    "col": "{{collection}}",
    "update": {
        "labels": [ "A great label" ]
    }
}


###
# Gets metadata for an asset.
#

GET {{base_url}}/metadata?id={{upload_asset_id}}&col={{collection}}
Content-Type: application/json
Authorization: Bearer {{token}}


### 
# Clears label from an asset.
#

PATCH {{base_url}}/metadata
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "id": "{{upload_asset_id}}",
    "col": "{{collection}}",
    "update": {
        "labels": []
    }
}


###
# Gets metadata for an asset.
#

GET {{base_url}}/metadata?id={{upload_asset_id}}&col={{collection}}
Content-Type: application/json
Authorization: Bearer {{token}}


### 
# Sets a description for an asset.
#

PATCH {{base_url}}/metadata
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "id": "{{upload_asset_id}}",
    "col": "{{collection}}",
    "update": {
        "description": "A great description"
    }
}


###
# Gets metadata for an asset.
#

GET {{base_url}}/metadata?id={{upload_asset_id}}&col={{collection}}
Content-Type: application/json
Authorization: Bearer {{token}}


###
# Check if an asset with a particular hash has been uploaded.

@hash = 1234

GET {{base_url}}/check-asset?hash={{hash}}&col={{collection}}
Authorization: Bearer {{token}}

###
# Retrieve a page of assets.
#

GET {{base_url}}/assets?col={{collection}}
Authorization: Bearer {{token}}